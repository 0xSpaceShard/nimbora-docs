"use strict";(self.webpackChunknimbora_yield_dex=self.webpackChunknimbora_yield_dex||[]).push([[642],{5053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=t(4848),a=t(8453);const r={id:"token_manager",title:"Using the Token Manager",sidebar_position:2},i="Token Manager",o={id:"sdks/sdk/guides/token_manager",title:"Using the Token Manager",description:"The Token Manager is a core component in the system that allows users to interact with the Strategy. This interaction may include actions such as sending, receiving, or managing tokens. Setting it up involves several steps.",source:"@site/docs/sdks/sdk/guides/using_token_manager.md",sourceDirName:"sdks/sdk/guides",slug:"/sdks/sdk/guides/token_manager",permalink:"/docs/sdks/sdk/guides/token_manager",draft:!1,unlisted:!1,editUrl:"https://github.com/0xSpaceShard/nimbora_yields_l2/docs/sdks/sdk/guides/using_token_manager.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"token_manager",title:"Using the Token Manager",sidebar_position:2},sidebar:"sdkSidebar",previous:{title:"Background",permalink:"/docs/sdks/sdk/guides/background"},next:{title:"Depositing into strategy",permalink:"/docs/sdks/sdk/guides/deposit"}},c={},d=[];function g(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"token-manager",children:"Token Manager"}),"\n",(0,s.jsx)(n.p,{children:"The Token Manager is a core component in the system that allows users to interact with the Strategy. This interaction may include actions such as sending, receiving, or managing tokens. Setting it up involves several steps."}),"\n",(0,s.jsx)(n.p,{children:"First, necessary packages and modules such as TokenManager and RpcProvider are imported."}),"\n",(0,s.jsx)(n.p,{children:"The tokenManagerAddress is then defined, followed by the initialization of the provider using the RpcProvider. The user's account details, including the accountAddress and accountPrivateKey, are then set."}),"\n",(0,s.jsx)(n.p,{children:"Finally, a new instance of TokenManager is created, using the previously defined tokenManagerAddress, provider, and account. This instance can then be used to interact with the Strategy."}),"\n",(0,s.jsx)(n.p,{children:"For this guide, the following packages are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/nimbora-token-manager",children:"nimbora-token-manager"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/starknet",children:"starknet.js"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { TokenManager } from 'nimbora-token-manager';\nimport { RpcProvider } from 'starknet';\n\nconst tokenManagerAddress: string = '';\nconst provider = new RpcProvider({ nodeUrl: 'https://starknet-goerli.g.alchemy.com/v2/XXX' });\n\nconst accountAddress = process.env.ACCOUNT_ADDRESS;\nconst accountPrivateKey = process.env.ACCOUNT_PRIVATE_KEY;\nconst account = new Account(provider, accountAddress, accountPrivateKey);\n\nconst tokenManager = new TokenManager(tokenManagerAddress, provider, account);\n"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);